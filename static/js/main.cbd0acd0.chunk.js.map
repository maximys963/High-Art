{"version":3,"sources":["assets/boobs-clipart-icon-6.png","assets/camera.svg","assets/searching-magnifying-glass.svg","components/mainPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MainPage","PageContainer","styled","div","_templateObject","TopContainer","_templateObject2","BrowserContainer","_templateObject3","img","BigText","_templateObject4","InputContainer","_templateObject5","InputGroup","_templateObject6","Input","input","_templateObject7","SearchIcon","_templateObject8","search","CameraIcon","_templateObject9","camera","TopText","_templateObject10","MiddleText","_templateObject11","react_default","a","createElement","value","Component","App","className","mainPage","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","Switch","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,koGCkJzBC,mLAvIT,IAAMC,EAAgBC,IAAOC,IAAVC,KAObC,EAAeH,IAAOC,IAAVG,KAIZC,EAAmBL,IAAOC,IAAVK,IAKEC,KAOhBC,EAAUR,IAAOC,IAAVQ,KAOTC,EAAkBV,IAAOC,IAAXU,KAQdC,EAAaZ,IAAOC,IAAVY,KAWVC,EAAQd,IAAOe,MAAVC,KAULC,EAAajB,IAAOC,IAAViB,IAGQC,KAUhBC,EAAapB,IAAOC,IAAVoB,IAIMC,KAUlBC,EAAUvB,IAAOH,EAAV2B,KASPC,EAAazB,IAAOC,IAAVyB,KAQd,OACIC,EAAAC,EAAAC,cAAC9B,EAAD,KACI4B,EAAAC,EAAAC,cAAC1B,EAAD,KACIwB,EAAAC,EAAAC,cAACN,EAAD,oCACAI,EAAAC,EAAAC,cAACJ,EAAD,sCAEJE,EAAAC,EAAAC,cAACxB,EAAD,KACIsB,EAAAC,EAAAC,cAACrB,EAAD,YACAmB,EAAAC,EAAAC,cAACrB,EAAD,aAEJmB,EAAAC,EAAAC,cAACnB,EAAD,KACIiB,EAAAC,EAAAC,cAACjB,EAAD,KACIe,EAAAC,EAAAC,cAACf,EAAD,CAAOgB,MAAO,kCACdH,EAAAC,EAAAC,cAACT,EAAD,MACAO,EAAAC,EAAAC,cAACZ,EAAD,OAEJU,EAAAC,EAAAC,cAACjB,EAAD,KACIe,EAAAC,EAAAC,cAACf,EAAD,CAAOgB,MAAO,6BACdH,EAAAC,EAAAC,cAACT,EAAD,MACAO,EAAAC,EAAAC,cAACZ,EAAD,OAEJU,EAAAC,EAAAC,cAACjB,EAAD,KACIe,EAAAC,EAAAC,cAACf,EAAD,CAAOgB,MAAO,uBACdH,EAAAC,EAAAC,cAACT,EAAD,MACAO,EAAAC,EAAAC,cAACZ,EAAD,gBAnIDc,aCQRC,0LARX,OACEL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAACK,EAAD,cAJUH,cCOEI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCCNC,IAASC,OAAOd,EAAAC,EAAAC,cAXH,kBACTF,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACIf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACAhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,IAAKC,UAAWf,IAClCL,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOG,UAAWf,QAMX,MAAUgB,SAASC,eAAe,SD8G5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.cbd0acd0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/boobs-clipart-icon-6.78535ff0.png\";","module.exports = __webpack_public_path__ + \"static/media/camera.e01686f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/searching-magnifying-glass.10ba2683.svg\";","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport img from '../assets/boobs-clipart-icon-6.png'\r\nimport camera from '../assets/camera.svg';\r\nimport search from '../assets/searching-magnifying-glass.svg';\r\n\r\n\r\nclass MainPage extends Component {\r\n\r\n\r\n    render() {\r\n      const PageContainer = styled.div`\r\n      width: 55%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center; \r\n      align-items: center;   \r\n    `;\r\n      const TopContainer = styled.div`\r\n      flex-direction: column;\r\n      justify-content: center;  \r\n      `;\r\n      const BrowserContainer = styled.div`\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-between;\r\n      align-items: flex-start;\r\n      background-image: url(${img});\r\n      background-size: cover;\r\n      background-repeat: no-repeat;\r\n      min-width: 630px;\r\n      min-height: 285px;\r\n      margin-right: 5s0px;     \r\n      `;\r\n        const BigText = styled.div`\r\n      margin-top: 20px;\r\n      font-size: 8rem;\r\n      color: #535353;\r\n      font-weight: bold;\r\n   \r\n       `;\r\n      const InputContainer =  styled.div`\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-start;\r\n      align-items: center;\r\n       min-width: 500px;\r\n      `;\r\n\r\n      const InputGroup = styled.div`\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: flex-end;\r\n      align-items: center;\r\n      width: 100%\r\n      height: 40px;\r\n      box-shadow: 0px 3px 25px -6px rgba(0,0,0,0.5);\r\n      margin-top: 25px;\r\n      `;\r\n\r\n      const Input = styled.input`\r\n      border: none;\r\n      height: 20px;\r\n      margin-right: 20px;\r\n      min-width: 370px; \r\n      font-size: 19px\r\n      &:focus{\r\n      outline: none;\r\n      }\r\n      `;\r\n      const SearchIcon = styled.div`\r\n      height: 20px;\r\n      width: 20px;\r\n      background-image: url(${search});\r\n      background-size: cover;\r\n      background-repeat: no-repeat;\r\n      border: none;\r\n      margin-right: 20px;\r\n      cursor: pointer;\r\n      &:hover{\r\n      opacity: 0.8\r\n      }\r\n      `;\r\n        const CameraIcon = styled.div`\r\n      margin-bottom: 5px;\r\n      height: 20px;\r\n      width: 20px;\r\n      background-image: url(${camera});\r\n      background-size: cover;\r\n      background-repeat: no-repeat;\r\n      margin-right: 25px;\r\n      border: none;\r\n      cursor: pointer;\r\n       &:hover{\r\n      opacity: 0.8\r\n      }\r\n      `;\r\n      const TopText = styled.p`\r\n      font-family: 'Lato', sans-serif;\r\n      font-size: 16px;\r\n      font-weight: 900;\r\n      margin-bottom: 40px;\r\n      margin-top: 40px;\r\n       color: #535353;\r\n      `;\r\n\r\n      const MiddleText = styled.div`\r\n      font-family: 'Lato', sans-serif;\r\n      font-size: 26px;\r\n      font-weight: 700;\r\n      margin-bottom: 20px;\r\n       color: #535353;\r\n      `;\r\n\r\n        return (\r\n            <PageContainer>\r\n                <TopContainer>\r\n                    <TopText>AND WHAT WILL YOUR MAMA SAY</TopText>\r\n                    <MiddleText>WHEN SHE SEES THE HISTORY OF</MiddleText>\r\n                </TopContainer>\r\n                <BrowserContainer>\r\n                    <BigText>BRO</BigText>\r\n                    <BigText>SER</BigText>\r\n                </BrowserContainer>\r\n                <InputContainer>\r\n                    <InputGroup>\r\n                        <Input value={'most important life questions'}/>\r\n                        <CameraIcon/>\r\n                        <SearchIcon/>\r\n                    </InputGroup>\r\n                    <InputGroup>\r\n                        <Input value={'why do i have no friends'}/>\r\n                        <CameraIcon/>\r\n                        <SearchIcon/>\r\n                    </InputGroup>\r\n                    <InputGroup>\r\n                        <Input value={'who is oleh vynnyk'}/>\r\n                        <CameraIcon/>\r\n                        <SearchIcon/>\r\n                    </InputGroup>\r\n                </InputContainer>\r\n            </PageContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { Component } from 'react';\nimport MainPage from './components/mainPage';\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <MainPage/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst Root = () => (\n    <Router>\n        <div>\n        <Switch>\n        <Route exact path={'/'} component={App} />\n         <Route component={App}/>\n        </Switch>\n        </div>\n    </Router>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}